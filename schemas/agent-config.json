{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Generic Agent Configuration Schema",
  "description": "Configuration schema for generic AI agents with configurable workflows, tools, and data processing",
  "type": "object",
  "required": ["agent", "llm"],
  "properties": {
    "agent": {
      "type": "object",
      "description": "Core agent configuration",
      "required": ["name", "description"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable name for the agent"
        },
        "description": {
          "type": "string",
          "description": "Description of the agent's purpose and capabilities"
        },
        "version": {
          "type": "string",
          "description": "Version of the agent configuration",
          "default": "1.0.0"
        },
        "goals": {
          "type": "array",
          "description": "List of high-level goals the agent should achieve",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "type": "array",
          "description": "List of capabilities this agent has",
          "items": {
            "type": "string"
          }
        },
        "max_iterations": {
          "type": "integer",
          "description": "Maximum number of workflow iterations before stopping",
          "minimum": 1,
          "default": 10
        },
        "timeout": {
          "type": "string",
          "description": "Maximum execution time (e.g., '5m', '30s')",
          "pattern": "^\\d+[smh]$",
          "default": "5m"
        },
        "interactive": {
          "type": "boolean",
          "description": "Whether to allow user interaction during execution",
          "default": true
        }
      }
    },
    "llm": {
      "type": "object",
      "description": "LLM configuration for AI capabilities",
      "required": ["provider", "model"],
      "properties": {
        "provider": {
          "type": "string",
          "description": "LLM provider to use",
          "enum": ["openai", "anthropic", "gemini", "ollama", "deepinfra", "groq"]
        },
        "model": {
          "type": "string",
          "description": "Specific model to use"
        },
        "temperature": {
          "type": "number",
          "description": "Temperature for text generation",
          "minimum": 0.0,
          "maximum": 2.0,
          "default": 0.7
        },
        "max_tokens": {
          "type": "integer",
          "description": "Maximum tokens to generate",
          "minimum": 1,
          "default": 4096
        },
        "system_prompt": {
          "type": "string",
          "description": "Base system prompt for the agent"
        },
        "specialized_models": {
          "type": "object",
          "description": "Specialized models for different tasks",
          "properties": {
            "analysis": {"type": "string"},
            "generation": {"type": "string"},
            "validation": {"type": "string"}
          }
        }
      }
    },
    "data_sources": {
      "type": "array",
      "description": "Configuration for data ingestion sources",
      "items": {
        "type": "object",
        "required": ["name", "type"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name for this data source"
          },
          "type": {
            "type": "string",
            "description": "Type of data source",
            "enum": ["file", "directory", "database", "api", "web", "stdin"]
          },
          "config": {
            "type": "object",
            "description": "Source-specific configuration",
            "properties": {
              "path": {"type": "string"},
              "url": {"type": "string"},
              "connection_string": {"type": "string"},
              "format": {"type": "string", "enum": ["json", "yaml", "csv", "text", "xml"]},
              "headers": {"type": "object"},
              "query": {"type": "string"},
              "filters": {"type": "array", "items": {"type": "string"}},
              "recursive": {"type": "boolean", "default": false}
            }
          },
          "preprocessing": {
            "type": "array",
            "description": "Data preprocessing steps",
            "items": {
              "type": "object",
              "required": ["type"],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["filter", "transform", "validate", "extract"]
                },
                "config": {"type": "object"}
              }
            }
          }
        }
      }
    },
    "workflows": {
      "type": "array",
      "description": "Workflow definitions for agent execution",
      "items": {
        "type": "object",
        "required": ["name", "steps"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name for the workflow"
          },
          "description": {
            "type": "string",
            "description": "Description of what the workflow does"
          },
          "trigger": {
            "type": "object",
            "description": "When this workflow should be executed",
            "properties": {
              "conditions": {
                "type": "array",
                "items": {"type": "string"}
              },
              "priority": {
                "type": "integer",
                "minimum": 1,
                "default": 100
              }
            }
          },
          "steps": {
            "type": "array",
            "description": "Ordered steps in the workflow",
            "items": {
              "type": "object",
              "required": ["name", "type"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Step identifier"
                },
                "type": {
                  "type": "string",
                  "description": "Type of step",
                  "enum": ["tool", "llm", "condition", "loop", "parallel"]
                },
                "config": {
                  "type": "object",
                  "description": "Step-specific configuration"
                },
                "depends_on": {
                  "type": "array",
                  "description": "List of step names this step depends on",
                  "items": {"type": "string"}
                },
                "retry": {
                  "type": "object",
                  "description": "Retry configuration",
                  "properties": {
                    "max_attempts": {"type": "integer", "minimum": 1, "default": 1},
                    "backoff": {"type": "string", "enum": ["linear", "exponential"], "default": "linear"}
                  }
                },
                "continue_on_error": {
                  "type": "boolean",
                  "description": "Whether to continue workflow if this step fails",
                  "default": false
                }
              }
            }
          },
          "output": {
            "type": "object",
            "description": "Output configuration for the workflow",
            "properties": {
              "format": {"type": "string", "enum": ["json", "yaml", "text", "markdown"]},
              "destination": {"type": "string"},
              "template": {"type": "string"}
            }
          }
        }
      }
    },
    "tools": {
      "type": "object",
      "description": "Available tools and their configurations",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether this tool is enabled",
            "default": true
          },
          "config": {
            "type": "object",
            "description": "Tool-specific configuration"
          },
          "permissions": {
            "type": "array",
            "description": "Required permissions for this tool",
            "items": {
              "type": "string",
              "enum": ["read_file", "write_file", "execute_shell", "network_access", "user_prompt"]
            }
          },
          "timeout": {
            "type": "string",
            "description": "Tool execution timeout",
            "pattern": "^\\d+[smh]$",
            "default": "30s"
          }
        }
      }
    },
    "outputs": {
      "type": "array",
      "description": "Output processing configurations",
      "items": {
        "type": "object",
        "required": ["name", "type"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Output processor name"
          },
          "type": {
            "type": "string",
            "description": "Type of output processor",
            "enum": ["file", "console", "api", "database", "webhook"]
          },
          "config": {
            "type": "object",
            "description": "Output-specific configuration",
            "properties": {
              "path": {"type": "string"},
              "format": {"type": "string", "enum": ["json", "yaml", "text", "markdown", "csv"]},
              "template": {"type": "string"},
              "url": {"type": "string"},
              "headers": {"type": "object"},
              "append": {"type": "boolean", "default": false}
            }
          },
          "filter": {
            "type": "object",
            "description": "Output filtering configuration",
            "properties": {
              "include": {"type": "array", "items": {"type": "string"}},
              "exclude": {"type": "array", "items": {"type": "string"}},
              "transform": {"type": "string"}
            }
          }
        }
      }
    },
    "environment": {
      "type": "object",
      "description": "Runtime environment configuration",
      "properties": {
        "variables": {
          "type": "object",
          "description": "Environment variables",
          "additionalProperties": {"type": "string"}
        },
        "workspace_root": {
          "type": "string",
          "description": "Root directory for agent operations",
          "default": "."
        },
        "temp_dir": {
          "type": "string",
          "description": "Temporary directory for agent operations"
        },
        "log_level": {
          "type": "string",
          "description": "Logging level",
          "enum": ["debug", "info", "warn", "error"],
          "default": "info"
        },
        "cache": {
          "type": "object",
          "description": "Caching configuration",
          "properties": {
            "enabled": {"type": "boolean", "default": true},
            "ttl": {"type": "string", "default": "1h"},
            "directory": {"type": "string", "default": ".agent/cache"}
          }
        },
        "limits": {
          "type": "object",
          "description": "Resource limits",
          "properties": {
            "max_memory": {"type": "string"},
            "max_cpu": {"type": "number"},
            "max_files": {"type": "integer"},
            "max_execution_time": {"type": "string"}
          }
        }
      }
    },
    "security": {
      "type": "object",
      "description": "Security configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether security checks are enabled",
          "default": true
        },
        "allowed_paths": {
          "type": "array",
          "description": "Paths the agent is allowed to access",
          "items": {"type": "string"}
        },
        "blocked_paths": {
          "type": "array",
          "description": "Paths the agent is not allowed to access",
          "items": {"type": "string"}
        },
        "allowed_commands": {
          "type": "array",
          "description": "Shell commands that are allowed",
          "items": {"type": "string"}
        },
        "require_approval": {
          "type": "boolean",
          "description": "Whether to require user approval for sensitive operations",
          "default": false
        },
        "max_file_size": {
          "type": "string",
          "description": "Maximum file size to process (e.g., '1MB', '10KB')",
          "default": "10MB"
        }
      }
    },
    "validation": {
      "type": "object",
      "description": "Output validation configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether validation is enabled",
          "default": true
        },
        "rules": {
          "type": "array",
          "description": "Validation rules to apply",
          "items": {
            "type": "object",
            "required": ["name", "type"],
            "properties": {
              "name": {"type": "string"},
              "type": {"type": "string", "enum": ["schema", "regex", "custom"]},
              "config": {"type": "object"}
            }
          }
        },
        "on_failure": {
          "type": "string",
          "description": "What to do when validation fails",
          "enum": ["stop", "warn", "retry"],
          "default": "warn"
        }
      }
    }
  }
}